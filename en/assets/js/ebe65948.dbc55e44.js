"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9285],{317:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>a,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"component/api","title":"API Definition","description":"Kratos implements REST and gRPC as the transport protocols. We mainly follow the [API Design Guide](https://cloud.google.com/apis/design/) from Google. You could define REST API and gRPC API in proto files and generate Go codes from these files.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/component/01-api.md","sourceDirName":"component","slug":"/component/api","permalink":"/en/docs/component/api","draft":false,"unlisted":false,"editUrl":"https://github.com/go-kratos/go-kratos.dev/edit/main/i18n/en/docusaurus-plugin-content-docs/current/component/01-api.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"id":"api","title":"API Definition","description":"Kratos implements REST and gRPC as the transport protocols. We mainly follow the [API Design Guide](https://cloud.google.com/apis/design/) from Google. You could define REST API and gRPC API in proto files and generate Go codes from these files.","keywords":["Go","Kratos","Toolkit","Framework","Microservices","Protobuf","gRPC","HTTP"]},"sidebar":"docs","previous":{"title":"\u6846\u67b6\u7ec4\u4ef6","permalink":"/en/docs/category/\u6846\u67b6\u7ec4\u4ef6"},"next":{"title":"Configuration","permalink":"/en/docs/component/config"}}');var t=n(4848),s=n(8453);const i={id:"api",title:"API Definition",description:"Kratos implements REST and gRPC as the transport protocols. We mainly follow the [API Design Guide](https://cloud.google.com/apis/design/) from Google. You could define REST API and gRPC API in proto files and generate Go codes from these files.",keywords:["Go","Kratos","Toolkit","Framework","Microservices","Protobuf","gRPC","HTTP"]},l=void 0,a={},c=[{value:"API Definition",id:"api-definition",level:2},{value:"API Generation",id:"api-generation",level:2},{value:"API Register",id:"api-register",level:2},{value:"References",id:"references",level:2}];function d(e){const o={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(o.p,{children:["Kratos implements REST and gRPC as the transport protocols. We mainly follow the ",(0,t.jsx)(o.a,{href:"https://cloud.google.com/apis/design/",children:"API Design Guide"})," from Google."]}),"\n",(0,t.jsx)(o.p,{children:"You could define REST API and gRPC API in proto files and generate Go codes from these files."}),"\n",(0,t.jsx)(o.h2,{id:"api-definition",children:"API Definition"}),"\n",(0,t.jsx)(o.p,{children:"You could define REST API and gRPC API in Protobuf IDL."}),"\n",(0,t.jsx)(o.p,{children:"api/helloworld/v1/greeter.proto"}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-protobuf",children:'syntax = "proto3";\n\npackage helloworld.v1;\n\nimport "google/api/annotations.proto";\n\noption go_package = "github.com/go-kratos/service-layout/api/helloworld/v1;v1";\noption java_multiple_files = true;\noption java_package = "dev.kratos.api.helloworld.v1";\noption java_outer_classname = "HelloWorldProtoV1";\n\n// The greeting service definition.\nservice Greeter {\n  // Sends a greeting\n  rpc SayHello (HelloRequest) returns (HelloReply)  {\n    option (google.api.http) = {\n        // To define GET API, map name to HelloRequest\n        get: "/helloworld/{name}",\n        // You could also add some additional APIs\n        additional_bindings {\n            // To define POST API, map body to HelloRequest\n            post: "/v1/greeter/say_hello",\n            body: "*",\n        }\n    };\n  }\n}\n\n// The request message contains the user\'s name.\nmessage HelloRequest {\n  string name = 1;\n}\n\n// The response message contains the greetings\nmessage HelloReply {\n  string message = 1;\n}\n'})}),"\n",(0,t.jsx)(o.h2,{id:"api-generation",children:"API Generation"}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-shell",children:"# To generate proto template\nkratos proto add api/helloworld/v1/greeter.proto\n# To generate client codes\nkratos proto client api/helloworld/v1/greeter.proto\n# To generate server codes\nkratos proto server api/helloworld/v1/greeter.proto -t internal/service\n"})}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-api",children:"client:\n|____api\n| |____helloworld\n| | |____v1\n| | | |____greeter.pb.go\n| | | |____greeter.proto\n| | | |____greeter_http.pb.go\n| | | |____greeter_grpc.pb.go\n\nserver:\n| |____service\n| | |____greeter.go\n"})}),"\n",(0,t.jsx)(o.h2,{id:"api-register",children:"API Register"}),"\n",(0,t.jsxs)(o.p,{children:[(0,t.jsx)(o.strong,{children:"HTTP API"})," is an ",(0,t.jsx)(o.code,{children:"http.Handler"}),", which is generated by ",(0,t.jsx)(o.code,{children:"protoc-gen-go-http"})," plugin, can be registered into HTTP Server."]}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-go",children:'import "github.com/go-kratos/kratos/v2/transport/http"\n\ngreeter := &GreeterService{}\nsrv := http.NewServer(http.Address(":8000"))\nsrv.HandlePrefix("/", v1.NewGreeterHandler(greeter))\n'})}),"\n",(0,t.jsxs)(o.p,{children:[(0,t.jsx)(o.strong,{children:"gRPC API"})," is a gRPC Register, which is generated by ",(0,t.jsx)(o.code,{children:"protoc-gen-go-grpc"})," plugin, can be registered into GRPC Server."]}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-go",children:'import "github.com/go-kratos/kratos/v2/transport/grpc"\n\ngreeter := &GreeterService{}\nsrv := grpc.NewServer(grpc.Address(":9000"))\nv1.RegisterGreeterServer(srv, greeter)\n'})}),"\n",(0,t.jsx)(o.h2,{id:"references",children:"References"}),"\n",(0,t.jsxs)(o.ul,{children:["\n",(0,t.jsx)(o.li,{children:(0,t.jsx)(o.a,{href:"https://cloud.google.com/apis/design",children:"https://cloud.google.com/apis/design"})}),"\n",(0,t.jsx)(o.li,{children:(0,t.jsx)(o.a,{href:"https://cloud.google.com/endpoints/docs/grpc/transcoding",children:"https://cloud.google.com/endpoints/docs/grpc/transcoding"})}),"\n",(0,t.jsx)(o.li,{children:(0,t.jsx)(o.a,{href:"https://github.com/googleapis/googleapis",children:"https://github.com/googleapis/googleapis"})}),"\n",(0,t.jsx)(o.li,{children:(0,t.jsx)(o.a,{href:"https://go-kratos.dev/docs/guide/api-protobuf/",children:"https://go-kratos.dev/docs/guide/api-protobuf/"})}),"\n",(0,t.jsx)(o.li,{children:(0,t.jsx)(o.a,{href:"https://developers.google.com/protocol-buffers/docs/style",children:"https://developers.google.com/protocol-buffers/docs/style"})}),"\n",(0,t.jsx)(o.li,{children:(0,t.jsx)(o.a,{href:"https://developers.google.com/protocol-buffers/docs/proto3",children:"https://developers.google.com/protocol-buffers/docs/proto3"})}),"\n",(0,t.jsx)(o.li,{children:(0,t.jsx)(o.a,{href:"https://colobu.com/2017/03/16/Protobuf3-language-guide/",children:"https://colobu.com/2017/03/16/Protobuf3-language-guide/"})}),"\n"]})]})}function p(e={}){const{wrapper:o}={...(0,s.R)(),...e.components};return o?(0,t.jsx)(o,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,o,n)=>{n.d(o,{R:()=>i,x:()=>l});var r=n(6540);const t={},s=r.createContext(t);function i(e){const o=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(o):{...o,...e}},[o,e])}function l(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(s.Provider,{value:o},e.children)}}}]);