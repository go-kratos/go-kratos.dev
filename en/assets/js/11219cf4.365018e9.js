"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1532],{8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>a});var r=t(6540);const o={},i=r.createContext(o);function l(e){const n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),r.createElement(i.Provider,{value:n},e.children)}},8780:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>l,metadata:()=>r,toc:()=>s});const r=JSON.parse('{"id":"component/selector","title":"Routing and Load Balancing","description":"The main interface for routing and load balancing is Selector, but a default Selector implementation is also provided in the same directory. This implementation can implement node weight calculation, route filtering, and load balancing algorithms by replacing NodeBuilder, Filter, Balancer, and Pluggable","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/component/09-selector.md","sourceDirName":"component","slug":"/component/selector","permalink":"/en/docs/component/selector","draft":false,"unlisted":false,"editUrl":"https://github.com/go-kratos/go-kratos.dev/edit/main/i18n/en/docusaurus-plugin-content-docs/current/component/09-selector.md","tags":[],"version":"current","sidebarPosition":9,"frontMatter":{"id":"selector","title":"Routing and Load Balancing","description":"The main interface for routing and load balancing is Selector, but a default Selector implementation is also provided in the same directory. This implementation can implement node weight calculation, route filtering, and load balancing algorithms by replacing NodeBuilder, Filter, Balancer, and Pluggable","keywords":["Go","Kratos","Framework","Microservices","Protobuf","gRPC","HTTP","Balancer","Route","Selector"]},"sidebar":"docs","previous":{"title":"Registry","permalink":"/en/docs/component/registry"},"next":{"title":"\u4e2d\u95f4\u4ef6","permalink":"/en/docs/category/\u4e2d\u95f4\u4ef6"}}');var o=t(4848),i=t(8453);const l={id:"selector",title:"Routing and Load Balancing",description:"The main interface for routing and load balancing is Selector, but a default Selector implementation is also provided in the same directory. This implementation can implement node weight calculation, route filtering, and load balancing algorithms by replacing NodeBuilder, Filter, Balancer, and Pluggable",keywords:["Go","Kratos","Framework","Microservices","Protobuf","gRPC","HTTP","Balancer","Route","Selector"]},a=void 0,c={},s=[{value:"Interface Implementation",id:"interface-implementation",level:2},{value:"How to use",id:"how-to-use",level:2},{value:"HTTP Client",id:"http-client",level:3},{value:"gRPC Client",id:"grpc-client",level:3}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"interface-implementation",children:"Interface Implementation"}),"\n",(0,o.jsxs)(n.p,{children:["The main interface for routing and load balancing is Selector, and a default Selector implementation is also provided in the same directory. This implementation can implement node weight calculation algorithm, service routing filtering strategy, and load balancing algorithm by replacing ",(0,o.jsx)(n.strong,{children:"NodeBuilder"}),", ",(0,o.jsx)(n.strong,{children:"Filter"}),", ",(0,o.jsx)(n.strong,{children:"Balancer"}),", and Pluggable."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",children:"type Selector interface {\n    // The list of service nodes maintained internally by the Selector is updated through the Rebalancer interface.\n    Rebalancer\n\n    // Select nodes\n    // if err == nil, selected and done must not be empty.\n    Select(ctx context.Context, opts ...SelectOption) (selected Node, done DoneFunc, err error)\n}\n\n// Realize service node change awareness through Rebalancer.\ntype Rebalancer interface {\n    Apply(nodes []Node)\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:"Supported implementations:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://github.com/go-kratos/kratos/tree/main/selector/wrr",children:"wrr"})," : Weighted round robin (Kratos Client built-in default algorithm)"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://github.com/go-kratos/kratos/tree/main/selector/p2c",children:"p2c"})," : Power of two choices"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://github.com/go-kratos/kratos/tree/main/selector/random",children:"random"})," : Random"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"how-to-use",children:"How to use"}),"\n",(0,o.jsx)(n.h3,{id:"http-client",children:"HTTP Client"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",children:'import "github.com/go-kratos/kratos/v2/selector/wrr"\nimport "github.com/go-kratos/kratos/v2/selector/filter"\n\n// Create a route Filter: filter instances with version number "2.0.0".\nfilter := filter.Version("2.0.0")\n// Create P2C load balancing algorithm Selector, and inject routing Filter.\nselector.SetGlobalSelector(wrr.NewBuilder())\n\nhConn, err := http.NewClient(\n  http.WithEndpoint("discovery:///helloworld"),\n  http.WithDiscovery(r),\n  http.WithNodeFilter(filter)\n)\n'})}),"\n",(0,o.jsx)(n.h3,{id:"grpc-client",children:"gRPC Client"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-go",children:'import "github.com/go-kratos/kratos/v2/selector/wrr"\nimport "github.com/go-kratos/kratos/v2/selector/filter"\n\n// Create a route Filter: filter instances with version number "2.0.0".\nfilter := filter.Version("2.0.0")\n// Due to the limitations of the gRPC framework, only the global balancer name can be used to inject Selector.\nselector.SetGlobalSelector(wrr.NewBuilder())\n\nconn, err := grpc.DialInsecure(\n  context.Background(),\n  grpc.WithEndpoint("discovery:///helloworld"),\n  grpc.WithDiscovery(r),\n\n  // Inject routing Filter through grpc.WithFilter.\n  grpc.WithNodeFilter(filter),\n)\n'})})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);