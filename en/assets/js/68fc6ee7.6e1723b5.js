"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2747],{3799:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"component/middleware/validate","title":"Validate","description":"Validate middleware uses proto-gen-validate generated code for parameter validation. You could write parameter validation rules in proto files and generate codes, in order to automatically parameter validation.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/component/middleware/09-validate.md","sourceDirName":"component/middleware","slug":"/component/middleware/validate","permalink":"/en/docs/component/middleware/validate","draft":false,"unlisted":false,"editUrl":"https://github.com/go-kratos/go-kratos.dev/edit/main/i18n/en/docusaurus-plugin-content-docs/current/component/middleware/09-validate.md","tags":[],"version":"current","sidebarPosition":9,"frontMatter":{"id":"validate","title":"Validate","keywords":["Go","Kratos","Toolkit","Framework","Microservices","Protobuf","gRPC","HTTP"]},"sidebar":"docs","previous":{"title":"Tracing","permalink":"/en/docs/component/middleware/tracing"},"next":{"title":"\u4f20\u8f93\u534f\u8bae","permalink":"/en/docs/category/\u4f20\u8f93\u534f\u8bae"}}');var r=t(4848),i=t(8453);const o={id:"validate",title:"Validate",keywords:["Go","Kratos","Toolkit","Framework","Microservices","Protobuf","gRPC","HTTP"]},l=void 0,s={},d=[{value:"Installation",id:"installation",level:3},{value:"Example",id:"example",level:3},{value:"Numerics",id:"numerics",level:3},{value:"Bools",id:"bools",level:4},{value:"Strings",id:"strings",level:4},{value:"Messages",id:"messages",level:4},{value:"Code Generation",id:"code-generation",level:3},{value:"Middleware",id:"middleware",level:3},{value:"HTTP",id:"http",level:4},{value:"gRPC",id:"grpc",level:4},{value:"References",id:"references",level:3}];function c(e){const n={a:"a",code:"code",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Validate middleware uses proto-gen-validate generated code for parameter validation. You could write parameter validation rules in proto files and generate codes, in order to automatically parameter validation."}),"\n",(0,r.jsx)(n.h3,{id:"installation",children:"Installation"}),"\n",(0,r.jsxs)(n.p,{children:["First you should install ",(0,r.jsx)(n.a,{href:"https://github.com/envoyproxy/protoc-gen-validate",children:"proto-gen-validate"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"go install github.com/envoyproxy/protoc-gen-validate@latest\n"})}),"\n",(0,r.jsxs)(n.p,{children:["If any error appears in generation process or there are ",(0,r.jsx)(n.code,{children:"// no validation rules for xxxx"})," in the generated codes, you could try ",(0,r.jsx)(n.code,{children:"git clone github.com/envoyproxy/protoc-gen-validate"})," then run ",(0,r.jsx)(n.code,{children:"make build"})]}),"\n",(0,r.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,r.jsxs)(n.p,{children:["Here are some examples of parameter validation for several common situations, you may also refer to more examples in ",(0,r.jsx)(n.a,{href:"https://github.com/envoyproxy/protoc-gen-validate",children:"proto-gen-validate"})]}),"\n",(0,r.jsx)(n.h3,{id:"numerics",children:"Numerics"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-protobuf",children:"// id must be greater than 0\nint64 id = 1 [(validate.rules).int64 = {gt: 0}];\n// age must be in the range (0, 120]\nint32 age = 2 [(validate.rules).int32 = {gt:0, lte: 120}];\n// code must be either 1, 2, or 3\nuint32 code = 3 [(validate.rules).uint32 = {in: [1,2,3]}];\n// score cannot be 0 nor 0.99\nfloat score = 1 [(validate.rules).float = {not_in: [0, 99.99]}];\n"})}),"\n",(0,r.jsx)(n.h4,{id:"bools",children:"Bools"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-protobuf",children:"// state must be set to true\nbool state = 5 [(validate.rules).bool.const = true];\n// x cannot be set to true\nbool state = 5 [(validate.rules).bool.const = false];\n"})}),"\n",(0,r.jsx)(n.h4,{id:"strings",children:"Strings"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-protobuf",children:'// x must be set to "/hello"\nstring path = 6 [(validate.rules).string.const = "/hello"];\n// phone must be exactly 11 characters long\nstring phone = 7 [(validate.rules).string.len = 11];\n// explain must be at least 10 characters long\nstring explain = 8 [(validate.rules).string.min_len =  10];\n// name must be between 1 and 10 characters, inclusive\nstring name = 9 [(validate.rules).string = {min_len: 1, max_len: 10}];\n// card must be a non-empty, case-insensitive hexadecimal string\nstring card = 10 [(validate.rules).string.pattern = "(?i)^[0-9a-f]+$"];\n// x must be a valid email address (via RFC 1034)\nstring email = 11 [(validate.rules).string.email = true];\n'})}),"\n",(0,r.jsx)(n.h4,{id:"messages",children:"Messages"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-protobuf",children:"// info cannot be unset\nInfo info = 11 [(validate.rules).message.required = true];\nmessage Info {\n    string address = 1;\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"code-generation",children:"Code Generation"}),"\n",(0,r.jsxs)(n.p,{children:["1.Directly use the ",(0,r.jsx)(n.code,{children:"protoc"})," command to generate"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"protoc --proto_path=. \\\n           --proto_path=./third_party \\\n           --go_out=paths=source_relative:. \\\n           --validate_out=paths=source_relative,lang=go:. \\\n           xxxx.proto\n"})}),"\n",(0,r.jsxs)(n.p,{children:["2.Add the  ",(0,r.jsx)(n.code,{children:"validate"})," command in Makefile"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-makefile",children:".PHONY: validate\n# generate validate proto\nvalidate:\n\tprotoc --proto_path=. \\\n           --proto_path=./third_party \\\n           --go_out=paths=source_relative:. \\\n           --validate_out=paths=source_relative,lang=go:. \\\n           $(API_PROTO_FILES)\n"})}),"\n",(0,r.jsx)(n.p,{children:"Execute command"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"make validate\n"})}),"\n",(0,r.jsx)(n.h3,{id:"middleware",children:"Middleware"}),"\n",(0,r.jsx)(n.p,{children:"We can inject the validate middleware into HTTP or gRPC, and the validate middleware automatically validates the parameters according to the rules written in the proto when request entering."}),"\n",(0,r.jsx)(n.h4,{id:"http",children:"HTTP"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'httpSrv := http.NewServer(\n\thttp.Address(":8000"),\n\thttp.Middleware(\n\t\tvalidate.Validator(),\n\t))\n'})}),"\n",(0,r.jsx)(n.h4,{id:"grpc",children:"gRPC"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'grpcSrv := grpc.NewServer(\n\tgrpc.Address(":9000"),\n\tgrpc.Middleware(\n\t\tvalidate.Validator(),\n\t))\n'})}),"\n",(0,r.jsx)(n.h3,{id:"references",children:"References"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/go-kratos/examples/tree/main/validate",children:"https://github.com/go-kratos/examples/tree/main/validate"})}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>l});var a=t(6540);const r={},i=a.createContext(r);function o(e){const n=a.useContext(i);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);